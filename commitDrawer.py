# Github Message Creator
#
# Draw a message through the "Contributions" visualization by scheduling when to commit
#
# Built 8/10/16


BLOCKS_HEIGHT = 7
BLOCKS_WIDTH = 52

#Arrays representing character set that can be displayed on the git

a = [0, 0, 0, 0, 0, 0, 0] + [0, 1, 1, 1, 1, 1, 1] + [1, 0, 0, 1, 0, 0, 0] + [1, 0, 0, 1, 0, 0, 0] + [1, 0, 0, 1, 0, 0, 0] + [0, 1, 1, 1, 1, 1, 1] + [0, 0, 0, 0, 0, 0, 0]

A = [0, 0, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 1, 1, 1, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0] 

b = [0, 0, 0, 0, 0, 0, 0] + [1, 1, 1, 1, 1, 1, 1] + [1, 0, 0, 1, 0, 0, 1] + [1, 0, 0, 1, 0, 0, 1] + [1, 0, 0, 1, 0, 0, 1] + [0, 1, 1, 0, 0, 1, 1] + [0, 0, 0, 0, 0, 0, 0]

B = [0, 1, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 1, 0]

c = [0, 0, 0, 0, 0, 0, 0] + [0, 0, 1, 1, 1, 1, 0] + [0, 1, 0, 0, 0, 0, 1] + [1, 0, 0, 0, 0, 0, 1] + [1, 0, 0, 0, 0, 0, 1] + [1, 0, 0, 0, 0, 0, 1] + [0, 0, 0, 0, 0, 0, 0]

C = [0, 0, 0, 1, 1, 1, 0,
     0, 0, 1, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0, 
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 0, 1, 1, 1, 1, 0]

d = [0, 0, 0, 0, 0, 0, 0] + [1, 1, 1, 1, 1, 1, 1] + [1, 0, 0, 0, 0, 0, 1] + [1, 0, 0, 0, 0, 0, 1] + [0, 1, 0, 0, 0, 0, 1] + [0, 0, 1, 1, 1, 1, 0] + [0, 0, 0, 0, 0, 0, 0]

D = [0, 1, 1, 1, 0, 0, 0,
     0, 1, 0, 0, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 0, 0]

e = [0, 0, 0, 0, 0, 0, 0] + [1, 1, 1, 1, 1, 1, 1] + [1, 0, 0, 1, 0, 0, 1] + [1, 0, 0, 1, 0, 0, 1] + [1, 0, 0, 1, 0, 0, 1] + [1, 0, 0, 0, 0, 0, 1] + [0, 0, 0, 0, 0, 0, 0]


E = [0, 1, 1, 1, 1, 1, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 1, 1, 1, 1, 0]

f = [0, 0, 0, 0, 0, 0, 0] + [1, 1, 1, 1, 1, 1, 1] + [1, 0, 0, 1, 0, 0, 0] + [1, 0, 0, 1, 0, 0, 0] + [1, 0, 0, 1, 0, 0, 0] + [1, 0, 0, 0, 0, 0, 0] + [0, 0, 0, 0, 0, 0, 0]


F = [0, 1, 1, 1, 1, 1, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0] 

g = [0, 0, 0, 0, 0, 0, 0] + [0, 1, 1, 1, 1, 1, 1] + [1, 0, 0, 0, 0, 0, 1] + [1, 0, 0, 0, 1, 0, 1] + [1, 0, 0, 0, 1, 0, 1] + [0, 1, 0, 0, 1, 1, 1] + [0, 0, 0, 0, 0, 0, 0]


G = [0, 0, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0, 
     0, 1, 0, 1, 1, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 1, 0] 

H = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0] 

I = [0, 1, 1, 1, 1, 1, 0,
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0, 
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0,
     0, 1, 1, 1, 1, 1, 0] 

J = [0, 0, 0, 1, 1, 1, 0,
     0, 0, 0, 0, 0, 1, 0,
     0, 0, 0, 0, 0, 1, 0,
     0, 0, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 0, 1, 1, 1, 1, 0] 

K = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 1, 0, 0,
     0, 1, 0, 1, 0, 0, 0,
     0, 1, 1, 0, 0, 0, 0, 
     0, 1, 1, 1, 0, 0, 0,
     0, 1, 0, 0, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0] 

L = [0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0, 
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0, 
     0, 1, 1, 1, 1, 1, 0] 

M = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 0, 1, 1, 0,
     0, 1, 0, 1, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0]
     
N = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 0, 0, 1, 0,
     0, 1, 0, 1, 0, 1, 0, 
     0, 1, 0, 0, 1, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0] 

O = [0, 0, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 0, 1, 1, 1, 0, 0] 

P = [0, 0, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0] 

Q = [0, 0, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 1, 0, 1, 0,
     0, 1, 0, 0, 1, 1, 0, 
     0, 0, 1, 1, 0, 1, 1]

R = [0, 1, 1, 1, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 1, 0, 0, 0,
     0, 1, 0, 0, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0] 

S = [0, 0, 1, 1, 1, 1, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 1, 1, 1, 0, 0, 
     0, 0, 0, 0, 0, 1, 0,
     0, 0, 0, 0, 0, 1, 0, 
     0, 1, 1, 1, 1, 0, 0] 

T = [0, 1, 1, 1, 1, 1, 0,
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0, 
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0, 
     0, 0, 0, 1, 0, 0, 0] 

U = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 0, 1, 1, 1, 0, 0]
     
V = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 0, 1, 0, 1, 0, 0, 
     0, 0, 0, 1, 0, 0, 0] 

W = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 1, 0, 1, 0,
     0, 1, 1, 0, 1, 1, 0, 
     0, 1, 0, 0, 0, 1, 0] 

X = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 0, 1, 0, 1, 0, 0, 
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 1, 0, 1, 0, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 1, 0, 0, 0, 1, 0] 

Y = [0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0,
     0, 1, 0, 0, 0, 1, 0, 
     0, 0, 1, 0, 1, 0, 0,
     0, 0, 0, 1, 0, 0, 0,
     0, 0, 0, 1, 0, 0, 0, 
     0, 0, 0, 1, 0, 0, 0]


Z = [0, 1, 1, 1, 1, 1, 0,
     0, 0, 0, 0, 0, 1, 0,
     0, 0, 0, 0, 1, 0, 0,
     0, 0, 0, 1, 0, 0, 0, 
     0, 0, 1, 0, 0, 0, 0,
     0, 1, 0, 0, 0, 0, 0,
     0, 1, 1, 1, 1, 1, 0]

SPACE = [0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0]

alphabet = {
     'a' : a,
     'b' : b,
     'c' : c,
     'd' : d,
     'e' : e,
     'f' : f,
     'g' : g,
     'h' : H,
     'i' : I,
     'j' : J,
     'k' : K,
     'l' : L,
     'm' : M,
     'n' : N,
     'o' : O,
     'p' : P,
     'q' : Q,
     'r' : R,
     's' : S,
     't' : T,
     'u' : U,
     'v' : V,
     'w' : W,
     'x' : X,
     'y' : Y,
     'z' : Z,
     ' ' : SPACE
 }

#Up to 7 characters are allowed
def setUpArray(message): 
     """Creates an array of the characters in the message"""
     lengthOfMessage = len(message)
     if lengthOfMessage > 7 or lengthOfMessage <= 0:
          print("Please enter a valid message.")
     else:
          commitArray = []
          for character in message:
               commitArray.extend(alphabet[character])
          
          commitArray = addExtraBlocks(commitArray, lengthOfMessage)
          return commitArray

def addExtraBlocks(commitArray, lengthOfMessage):
     #Prepend 3 block columns to the front of the commit array and 5 blocks at the end
     preBlocks =     [0, 0, 0,
                      0, 0, 0, 
                      0, 0, 0, 
                      0, 0, 0, 
                      0, 0, 0,
                      0, 0, 0,
                      0, 0, 0]

     #Fill in empty characters 
     additionalPreBlocks = [0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0] * (7 - lengthOfMessage)

     postBlocks = [0,
                   0,
                   0,
                   0,
                   0]

     commitArray = preBlocks + additionalPreBlocks + commitArray # + postBlocks will not be implemented for simplicity
     return commitArray

def printCharacters(commitArray): 
     print("                        -------------------------------------                        ")

     for row in range(BLOCKS_HEIGHT):
          currentRowIndexes = range(row, BLOCKS_WIDTH * BLOCKS_HEIGHT, 7)
          for col in range(BLOCKS_WIDTH):
               print( "X" if commitArray[currentRowIndexes[col]] == 1 else "-"),
          print;



